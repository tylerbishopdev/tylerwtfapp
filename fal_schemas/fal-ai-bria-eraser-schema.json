{
  "openapi": "3.0.4",
  "info": {
    "title": "Queue OpenAPI for fal-ai/bria/eraser",
    "version": "1.0.0",
    "description": "The OpenAPI schema for the fal-ai/bria/eraser queue.",
    "x-fal-metadata": {
      "endpointId": "fal-ai/bria/eraser",
      "category": "image-to-image",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/bria.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/bria/eraser",
      "documentationUrl": "https://fal.ai/models/fal-ai/bria/eraser/api"
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Fal Key"
      }
    },
    "schemas": {
      "QueueStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "IN_QUEUE",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "The request id."
          },
          "response_url": {
            "type": "string",
            "description": "The response url."
          },
          "status_url": {
            "type": "string",
            "description": "The status url."
          },
          "cancel_url": {
            "type": "string",
            "description": "The cancel url."
          },
          "logs": {
            "type": "object",
            "description": "The logs.",
            "additionalProperties": true
          },
          "metrics": {
            "type": "object",
            "description": "The metrics.",
            "additionalProperties": true
          },
          "queue_position": {
            "type": "integer",
            "description": "The queue position."
          }
        },
        "required": [
          "status",
          "request_id"
        ]
      },
      "BriaEraserInput": {
        "title": "EraserInput",
        "type": "object",
        "properties": {
          "sync_mode": {
            "title": "Sync Mode",
            "type": "boolean",
            "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
            "default": false
          },
          "preserve_alpha": {
            "title": "Preserve Alpha",
            "type": "boolean",
            "description": "\n            If set to true, attempts to preserve the alpha channel of the input image.\n        ",
            "default": false
          },
          "mask_url": {
            "examples": [
              "https://storage.googleapis.com/falserverless/bria/bria_eraser_mask.png"
            ],
            "title": "Mask Url",
            "type": "string",
            "description": "The URL of the binary mask image that represents the area that will be cleaned."
          },
          "mask_type": {
            "enum": [
              "manual",
              "automatic"
            ],
            "title": "Mask Type",
            "type": "string",
            "description": "You can use this parameter to specify the type of the input mask from the list. 'manual' opttion should be used in cases in which the mask had been generated by a user (e.g. with a brush tool), and 'automatic' mask type should be used when mask had been generated by an algorithm like 'SAM'.",
            "default": "manual"
          },
          "image_url": {
            "examples": [
              "https://storage.googleapis.com/falserverless/bria/bria_eraser_img.png"
            ],
            "title": "Image Url",
            "type": "string",
            "description": "Input Image to erase from"
          }
        },
        "x-fal-order-properties": [
          "image_url",
          "mask_url",
          "mask_type",
          "sync_mode",
          "preserve_alpha"
        ],
        "required": [
          "image_url",
          "mask_url"
        ]
      },
      "BriaEraserOutput": {
        "title": "EraserOutput",
        "type": "object",
        "properties": {
          "image": {
            "examples": [
              {
                "content_type": "image/png",
                "url": "https://storage.googleapis.com/falserverless/bria/bria_eraser_res.png"
              }
            ],
            "title": "Image",
            "description": "The generated image",
            "allOf": [
              {
                "$ref": "#/components/schemas/Image"
              }
            ]
          }
        },
        "x-fal-order-properties": [
          "image"
        ],
        "required": [
          "image"
        ]
      },
      "Image": {
        "description": "Represents an image file.",
        "type": "object",
        "x-fal-order-properties": [
          "url",
          "content_type",
          "file_name",
          "file_size",
          "file_data",
          "width",
          "height"
        ],
        "title": "Image",
        "properties": {
          "file_size": {
            "examples": [
              4404019
            ],
            "title": "File Size",
            "type": "integer",
            "description": "The size of the file in bytes."
          },
          "height": {
            "examples": [
              1024
            ],
            "title": "Height",
            "type": "integer",
            "description": "The height of the image in pixels."
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "The URL where the file can be downloaded from."
          },
          "width": {
            "examples": [
              1024
            ],
            "title": "Width",
            "type": "integer",
            "description": "The width of the image in pixels."
          },
          "file_name": {
            "examples": [
              "z9RV14K95DvU.png"
            ],
            "title": "File Name",
            "type": "string",
            "description": "The name of the file. It will be auto-generated if not provided."
          },
          "content_type": {
            "examples": [
              "image/png"
            ],
            "title": "Content Type",
            "type": "string",
            "description": "The mime type of the file."
          },
          "file_data": {
            "format": "binary",
            "title": "File Data",
            "type": "string",
            "description": "File data"
          }
        },
        "required": [
          "url"
        ]
      }
    }
  },
  "paths": {
    "/fal-ai/bria/eraser/requests/{request_id}/status": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          },
          {
            "name": "logs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Whether to include logs (`1`) in the response or not (`0`)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/bria/eraser/requests/{request_id}/cancel": {
      "put": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was cancelled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was cancelled successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/bria/eraser": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BriaEraserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/bria/eraser/requests/{request_id}": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BriaEraserOutput"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://queue.fal.run"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ]
}