{
  "openapi": "3.0.4",
  "info": {
    "title": "Queue OpenAPI for fal-ai/bria/expand",
    "version": "1.0.0",
    "description": "The OpenAPI schema for the fal-ai/bria/expand queue.",
    "x-fal-metadata": {
      "endpointId": "fal-ai/bria/expand",
      "category": "image-to-image",
      "thumbnailUrl": "https://storage.googleapis.com/falserverless/gallery/bria.webp",
      "playgroundUrl": "https://fal.ai/models/fal-ai/bria/expand",
      "documentationUrl": "https://fal.ai/models/fal-ai/bria/expand/api"
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Fal Key"
      }
    },
    "schemas": {
      "QueueStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "IN_QUEUE",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "The request id."
          },
          "response_url": {
            "type": "string",
            "description": "The response url."
          },
          "status_url": {
            "type": "string",
            "description": "The status url."
          },
          "cancel_url": {
            "type": "string",
            "description": "The cancel url."
          },
          "logs": {
            "type": "object",
            "description": "The logs.",
            "additionalProperties": true
          },
          "metrics": {
            "type": "object",
            "description": "The metrics.",
            "additionalProperties": true
          },
          "queue_position": {
            "type": "integer",
            "description": "The queue position."
          }
        },
        "required": [
          "status",
          "request_id"
        ]
      },
      "BriaExpandInput": {
        "title": "ImageExpansionInput",
        "type": "object",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string",
            "description": "Text on which you wish to base the image expansion. This parameter is optional. Bria currently supports prompts in English only, excluding special characters.",
            "default": ""
          },
          "aspect_ratio": {
            "enum": [
              "1:1",
              "2:3",
              "3:2",
              "3:4",
              "4:3",
              "4:5",
              "5:4",
              "9:16",
              "16:9"
            ],
            "title": "Aspect Ratio",
            "type": "string",
            "description": "The desired aspect ratio of the final image. Will be used over original_image_size and original_image_location if provided."
          },
          "original_image_location": {
            "examples": [
              [
                301,
                -66
              ]
            ],
            "title": "Original Image Location",
            "type": "array",
            "description": "The desired location of the original image, inside the full canvas. Provide the location of the upper left corner of the original image. The location can also be outside the canvas (the original image will be cropped). Will be ignored if aspect_ratio is provided.",
            "items": {
              "type": "integer"
            }
          },
          "image_url": {
            "examples": [
              "https://storage.googleapis.com/falserverless/model_tests/orange.png"
            ],
            "title": "Image Url",
            "type": "string",
            "description": "The URL of the input image."
          },
          "sync_mode": {
            "title": "Sync Mode",
            "type": "boolean",
            "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
            "default": false
          },
          "canvas_size": {
            "examples": [
              [
                1200,
                674
              ]
            ],
            "title": "Canvas Size",
            "type": "array",
            "description": "The desired size of the final image, after the expansion. should have an area of less than 5000x5000 pixels.",
            "items": {
              "type": "integer"
            }
          },
          "original_image_size": {
            "examples": [
              [
                610,
                855
              ]
            ],
            "title": "Original Image Size",
            "type": "array",
            "description": "The desired size of the original image, inside the full canvas. Ensure that the ratio of input image foreground or main subject to the canvas area is greater than 15% to achieve optimal results. Will be ignored if aspect_ratio is provided.",
            "items": {
              "type": "integer"
            }
          },
          "seed": {
            "minimum": 0,
            "maximum": 2147483647,
            "type": "integer",
            "title": "Seed",
            "description": "You can choose whether you want your generated expension to be random or predictable. You can recreate the same result in the future by using the seed value of a result from the response. You can exclude this parameter if you are not interested in recreating your results. This parameter is optional."
          },
          "negative_prompt": {
            "title": "Negative Prompt",
            "type": "string",
            "description": "The negative prompt you would like to use to generate images.",
            "default": ""
          }
        },
        "x-fal-order-properties": [
          "image_url",
          "canvas_size",
          "aspect_ratio",
          "original_image_size",
          "original_image_location",
          "prompt",
          "seed",
          "negative_prompt",
          "sync_mode"
        ],
        "required": [
          "image_url",
          "canvas_size"
        ]
      },
      "BriaExpandOutput": {
        "title": "ImageExpansionOutput",
        "type": "object",
        "properties": {
          "image": {
            "examples": [
              {
                "file_size": 1471342,
                "height": 674,
                "file_name": "afa402a35ea742cdb5c3e219b2b19bfb.png",
                "content_type": "image/png",
                "url": "https://v3.fal.media/files/koala/8np-spgxxG-I1r3cjthRV_afa402a35ea742cdb5c3e219b2b19bfb.png",
                "width": 1200
              }
            ],
            "title": "Image",
            "description": "The generated image",
            "allOf": [
              {
                "$ref": "#/components/schemas/Image"
              }
            ]
          },
          "seed": {
            "title": "Seed",
            "type": "integer",
            "description": "Seed value used for generation."
          }
        },
        "x-fal-order-properties": [
          "image",
          "seed"
        ],
        "required": [
          "image",
          "seed"
        ]
      },
      "Image": {
        "description": "Represents an image file.",
        "type": "object",
        "x-fal-order-properties": [
          "url",
          "content_type",
          "file_name",
          "file_size",
          "file_data",
          "width",
          "height"
        ],
        "title": "Image",
        "properties": {
          "file_size": {
            "examples": [
              4404019
            ],
            "title": "File Size",
            "type": "integer",
            "description": "The size of the file in bytes."
          },
          "height": {
            "examples": [
              1024
            ],
            "title": "Height",
            "type": "integer",
            "description": "The height of the image in pixels."
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "The URL where the file can be downloaded from."
          },
          "width": {
            "examples": [
              1024
            ],
            "title": "Width",
            "type": "integer",
            "description": "The width of the image in pixels."
          },
          "file_name": {
            "examples": [
              "z9RV14K95DvU.png"
            ],
            "title": "File Name",
            "type": "string",
            "description": "The name of the file. It will be auto-generated if not provided."
          },
          "content_type": {
            "examples": [
              "image/png"
            ],
            "title": "Content Type",
            "type": "string",
            "description": "The mime type of the file."
          },
          "file_data": {
            "format": "binary",
            "title": "File Data",
            "type": "string",
            "description": "File data"
          }
        },
        "required": [
          "url"
        ]
      }
    }
  },
  "paths": {
    "/fal-ai/bria/expand/requests/{request_id}/status": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          },
          {
            "name": "logs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Whether to include logs (`1`) in the response or not (`0`)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/bria/expand/requests/{request_id}/cancel": {
      "put": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was cancelled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was cancelled successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/bria/expand": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BriaExpandInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/bria/expand/requests/{request_id}": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BriaExpandOutput"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://queue.fal.run"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ]
}