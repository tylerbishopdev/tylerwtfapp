{
  "openapi": "3.0.4",
  "info": {
    "title": "Queue OpenAPI for fal-ai/flux-lora",
    "version": "1.0.0",
    "description": "The OpenAPI schema for the fal-ai/flux-lora queue.",
    "x-fal-metadata": {
      "endpointId": "fal-ai/flux-lora",
      "category": "text-to-image",
      "thumbnailUrl": "https://fal.media/files/elephant/RqIQsOY3cgQMMtCedJKlf_c2fc262516d24b94afdc17a747292710.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/flux-lora",
      "documentationUrl": "https://fal.ai/models/fal-ai/flux-lora/api"
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Fal Key"
      }
    },
    "schemas": {
      "QueueStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "IN_QUEUE",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "The request id."
          },
          "response_url": {
            "type": "string",
            "description": "The response url."
          },
          "status_url": {
            "type": "string",
            "description": "The status url."
          },
          "cancel_url": {
            "type": "string",
            "description": "The cancel url."
          },
          "logs": {
            "type": "object",
            "description": "The logs.",
            "additionalProperties": true
          },
          "metrics": {
            "type": "object",
            "description": "The metrics.",
            "additionalProperties": true
          },
          "queue_position": {
            "type": "integer",
            "description": "The queue position."
          }
        },
        "required": [
          "status",
          "request_id"
        ]
      },
      "FluxLoraInput": {
        "title": "TextToImageInput",
        "type": "object",
        "properties": {
          "prompt": {
            "examples": [
              "Extreme close-up of a single tiger eye, direct frontal view. Detailed iris and pupil. Sharp focus on eye texture and color. Natural lighting to capture authentic eye shine and depth. The word \"FLUX\" is painted over it in big, white brush strokes with visible texture."
            ],
            "title": "Prompt",
            "type": "string",
            "description": "The prompt to generate an image from."
          },
          "num_images": {
            "minimum": 1,
            "maximum": 4,
            "type": "integer",
            "title": "Num Images",
            "description": "The number of images to generate. This is always set to 1 for streaming output.",
            "default": 1
          },
          "image_size": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImageSize"
              },
              {
                "enum": [
                  "square_hd",
                  "square",
                  "portrait_4_3",
                  "portrait_16_9",
                  "landscape_4_3",
                  "landscape_16_9"
                ],
                "type": "string"
              }
            ],
            "title": "Image Size",
            "description": "The size of the generated image.",
            "default": "landscape_4_3"
          },
          "output_format": {
            "enum": [
              "jpeg",
              "png"
            ],
            "title": "Output Format",
            "type": "string",
            "description": "The format of the generated image.",
            "default": "jpeg"
          },
          "loras": {
            "description": "\n            The LoRAs to use for the image generation. You can use any number of LoRAs\n            and they will be merged together to generate the final image.\n        ",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoraWeight"
            },
            "examples": [],
            "title": "Loras",
            "default": []
          },
          "sync_mode": {
            "title": "Sync Mode",
            "type": "boolean",
            "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
            "default": false
          },
          "guidance_scale": {
            "minimum": 0,
            "maximum": 35,
            "type": "number",
            "title": "Guidance scale (CFG)",
            "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related image to show you.\n        ",
            "default": 3.5
          },
          "num_inference_steps": {
            "minimum": 1,
            "maximum": 50,
            "type": "integer",
            "title": "Num Inference Steps",
            "description": "The number of inference steps to perform.",
            "default": 28
          },
          "seed": {
            "title": "Seed",
            "type": "integer",
            "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same image every time.\n        "
          },
          "enable_safety_checker": {
            "title": "Enable Safety Checker",
            "type": "boolean",
            "description": "If set to true, the safety checker will be enabled.",
            "default": true
          }
        },
        "x-fal-order-properties": [
          "prompt",
          "image_size",
          "num_inference_steps",
          "seed",
          "loras",
          "guidance_scale",
          "sync_mode",
          "num_images",
          "enable_safety_checker",
          "output_format"
        ],
        "required": [
          "prompt"
        ]
      },
      "FluxLoraOutput": {
        "title": "Output",
        "type": "object",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string",
            "description": "The prompt used for generating the image."
          },
          "images": {
            "title": "Images",
            "type": "array",
            "description": "The generated image files info.",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "timings": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Timings"
          },
          "has_nsfw_concepts": {
            "title": "Has Nsfw Concepts",
            "type": "array",
            "description": "Whether the generated images contain NSFW concepts.",
            "items": {
              "type": "boolean"
            }
          },
          "seed": {
            "title": "Seed",
            "type": "integer",
            "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
          }
        },
        "x-fal-order-properties": [
          "images",
          "timings",
          "seed",
          "has_nsfw_concepts",
          "prompt"
        ],
        "required": [
          "images",
          "timings",
          "seed",
          "has_nsfw_concepts",
          "prompt"
        ]
      },
      "ImageSize": {
        "title": "ImageSize",
        "type": "object",
        "properties": {
          "height": {
            "maximum": 14142,
            "type": "integer",
            "title": "Height",
            "description": "The height of the generated image.",
            "exclusiveMinimum": 0,
            "default": 512
          },
          "width": {
            "maximum": 14142,
            "type": "integer",
            "title": "Width",
            "description": "The width of the generated image.",
            "exclusiveMinimum": 0,
            "default": 512
          }
        },
        "x-fal-order-properties": [
          "width",
          "height"
        ]
      },
      "LoraWeight": {
        "title": "LoraWeight",
        "type": "object",
        "properties": {
          "path": {
            "title": "Path",
            "type": "string",
            "description": "URL or the path to the LoRA weights."
          },
          "scale": {
            "minimum": 0,
            "maximum": 4,
            "type": "number",
            "title": "Scale",
            "description": "\n            The scale of the LoRA weight. This is used to scale the LoRA weight\n            before merging it with the base model.\n        ",
            "default": 1
          }
        },
        "x-fal-order-properties": [
          "path",
          "scale"
        ],
        "required": [
          "path"
        ]
      },
      "Image": {
        "title": "Image",
        "type": "object",
        "properties": {
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "content_type": {
            "title": "Content Type",
            "type": "string",
            "default": "image/jpeg"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "x-fal-order-properties": [
          "url",
          "width",
          "height",
          "content_type"
        ],
        "required": [
          "url",
          "width",
          "height"
        ]
      }
    }
  },
  "paths": {
    "/fal-ai/flux-lora/requests/{request_id}/status": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          },
          {
            "name": "logs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Whether to include logs (`1`) in the response or not (`0`)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/flux-lora/requests/{request_id}/cancel": {
      "put": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was cancelled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was cancelled successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/flux-lora": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FluxLoraInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/flux-lora/requests/{request_id}": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FluxLoraOutput"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://queue.fal.run"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ]
}