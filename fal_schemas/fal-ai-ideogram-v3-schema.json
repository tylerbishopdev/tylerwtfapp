{
  "openapi": "3.0.4",
  "info": {
    "title": "Queue OpenAPI for fal-ai/ideogram/v3",
    "version": "1.0.0",
    "description": "The OpenAPI schema for the fal-ai/ideogram/v3 queue.",
    "x-fal-metadata": {
      "endpointId": "fal-ai/ideogram/v3",
      "category": "text-to-image",
      "thumbnailUrl": "https://fal.media/files/koala/nTe9hpbTjo8BWgaGYTGzi_7b7c3112872b48b6be63734f9daa3f73.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/ideogram/v3",
      "documentationUrl": "https://fal.ai/models/fal-ai/ideogram/v3/api"
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Fal Key"
      }
    },
    "schemas": {
      "QueueStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "IN_QUEUE",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "The request id."
          },
          "response_url": {
            "type": "string",
            "description": "The response url."
          },
          "status_url": {
            "type": "string",
            "description": "The status url."
          },
          "cancel_url": {
            "type": "string",
            "description": "The cancel url."
          },
          "logs": {
            "type": "object",
            "description": "The logs.",
            "additionalProperties": true
          },
          "metrics": {
            "type": "object",
            "description": "The metrics.",
            "additionalProperties": true
          },
          "queue_position": {
            "type": "integer",
            "description": "The queue position."
          }
        },
        "required": [
          "status",
          "request_id"
        ]
      },
      "IdeogramV3Input": {
        "title": "BaseTextToImageInputV3",
        "type": "object",
        "properties": {
          "prompt": {
            "examples": [
              "The Bone Forest stretched across the horizon, its trees fashioned from the ossified remains of ancient leviathans that once swam through the sky. Shamans with antlers growing from their shoulders and eyes that revealed the true nature of any being they beheld conducted rituals to commune with the spirits that still inhabited the calcified grove. In sky writes \"Ideogram V3 in fal.ai\""
            ],
            "title": "Prompt",
            "type": "string"
          },
          "num_images": {
            "minimum": 1,
            "maximum": 8,
            "type": "integer",
            "title": "Num Images",
            "description": "Number of images to generate.",
            "default": 1
          },
          "image_size": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImageSize"
              },
              {
                "enum": [
                  "square_hd",
                  "square",
                  "portrait_4_3",
                  "portrait_16_9",
                  "landscape_4_3",
                  "landscape_16_9"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Size",
            "description": "The resolution of the generated image",
            "default": "square_hd"
          },
          "style": {
            "anyOf": [
              {
                "enum": [
                  "AUTO",
                  "GENERAL",
                  "REALISTIC",
                  "DESIGN"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Style",
            "description": "The style type to generate with. Cannot be used with style_codes."
          },
          "style_preset": {
            "anyOf": [
              {
                "enum": [
                  "80S_ILLUSTRATION",
                  "90S_NOSTALGIA",
                  "ABSTRACT_ORGANIC",
                  "ANALOG_NOSTALGIA",
                  "ART_BRUT",
                  "ART_DECO",
                  "ART_POSTER",
                  "AURA",
                  "AVANT_GARDE",
                  "BAUHAUS",
                  "BLUEPRINT",
                  "BLURRY_MOTION",
                  "BRIGHT_ART",
                  "C4D_CARTOON",
                  "CHILDRENS_BOOK",
                  "COLLAGE",
                  "COLORING_BOOK_I",
                  "COLORING_BOOK_II",
                  "CUBISM",
                  "DARK_AURA",
                  "DOODLE",
                  "DOUBLE_EXPOSURE",
                  "DRAMATIC_CINEMA",
                  "EDITORIAL",
                  "EMOTIONAL_MINIMAL",
                  "ETHEREAL_PARTY",
                  "EXPIRED_FILM",
                  "FLAT_ART",
                  "FLAT_VECTOR",
                  "FOREST_REVERIE",
                  "GEO_MINIMALIST",
                  "GLASS_PRISM",
                  "GOLDEN_HOUR",
                  "GRAFFITI_I",
                  "GRAFFITI_II",
                  "HALFTONE_PRINT",
                  "HIGH_CONTRAST",
                  "HIPPIE_ERA",
                  "ICONIC",
                  "JAPANDI_FUSION",
                  "JAZZY",
                  "LONG_EXPOSURE",
                  "MAGAZINE_EDITORIAL",
                  "MINIMAL_ILLUSTRATION",
                  "MIXED_MEDIA",
                  "MONOCHROME",
                  "NIGHTLIFE",
                  "OIL_PAINTING",
                  "OLD_CARTOONS",
                  "PAINT_GESTURE",
                  "POP_ART",
                  "RETRO_ETCHING",
                  "RIVIERA_POP",
                  "SPOTLIGHT_80S",
                  "STYLIZED_RED",
                  "SURREAL_COLLAGE",
                  "TRAVEL_POSTER",
                  "VINTAGE_GEO",
                  "VINTAGE_POSTER",
                  "WATERCOLOR",
                  "WEIRD",
                  "WOODBLOCK_PRINT"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Style Preset",
            "description": "Style preset for generation. The chosen style preset will guide the generation."
          },
          "expand_prompt": {
            "title": "Expand Prompt",
            "type": "boolean",
            "description": "Determine if MagicPrompt should be used in generating the request or not.",
            "default": true
          },
          "rendering_speed": {
            "enum": [
              "TURBO",
              "BALANCED",
              "QUALITY"
            ],
            "title": "Rendering Speed",
            "type": "string",
            "description": "The rendering speed to use.",
            "default": "BALANCED"
          },
          "style_codes": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Style Codes",
            "description": "A list of 8 character hexadecimal codes representing the style of the image. Cannot be used in conjunction with style_reference_images or style"
          },
          "color_palette": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ColorPalette"
              },
              {
                "type": "null"
              }
            ],
            "description": "A color palette for generation, must EITHER be specified via one of the presets (name) or explicitly via hexadecimal representations of the color with optional weights (members)"
          },
          "sync_mode": {
            "title": "Sync Mode",
            "type": "boolean",
            "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
            "default": false
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Seed for the random number generator"
          },
          "image_urls": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Urls",
            "description": "A set of images to use as style references (maximum total size 10MB across all style references). The images should be in JPEG, PNG or WebP format"
          },
          "negative_prompt": {
            "title": "Negative Prompt",
            "type": "string",
            "description": "Description of what to exclude from an image. Descriptions in the prompt take precedence to descriptions in the negative prompt.",
            "default": ""
          }
        },
        "x-fal-order-properties": [
          "image_urls",
          "rendering_speed",
          "color_palette",
          "style_codes",
          "style",
          "expand_prompt",
          "num_images",
          "seed",
          "sync_mode",
          "style_preset",
          "prompt",
          "image_size",
          "negative_prompt"
        ],
        "required": [
          "prompt"
        ]
      },
      "IdeogramV3Output": {
        "title": "OutputV3",
        "type": "object",
        "properties": {
          "images": {
            "examples": [
              [
                {
                  "url": "https://v3.fal.media/files/penguin/lHdRabS80guysb8Zw1kul_image.png"
                }
              ]
            ],
            "title": "Images",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            }
          },
          "seed": {
            "examples": [
              123456
            ],
            "title": "Seed",
            "type": "integer",
            "description": "Seed used for the random number generator"
          }
        },
        "x-fal-order-properties": [
          "images",
          "seed"
        ],
        "required": [
          "images",
          "seed"
        ]
      },
      "ImageSize": {
        "title": "ImageSize",
        "type": "object",
        "properties": {
          "height": {
            "maximum": 14142,
            "type": "integer",
            "title": "Height",
            "description": "The height of the generated image.",
            "exclusiveMinimum": 0,
            "default": 512
          },
          "width": {
            "maximum": 14142,
            "type": "integer",
            "title": "Width",
            "description": "The width of the generated image.",
            "exclusiveMinimum": 0,
            "default": 512
          }
        },
        "x-fal-order-properties": [
          "width",
          "height"
        ]
      },
      "ColorPalette": {
        "title": "ColorPalette",
        "type": "object",
        "properties": {
          "members": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColorPaletteMember"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Members",
            "description": "A list of color palette members that define the color palette"
          },
          "name": {
            "anyOf": [
              {
                "enum": [
                  "EMBER",
                  "FRESH",
                  "JUNGLE",
                  "MAGIC",
                  "MELON",
                  "MOSAIC",
                  "PASTEL",
                  "ULTRAMARINE"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A color palette preset value"
          }
        },
        "x-fal-order-properties": [
          "members",
          "name"
        ]
      },
      "File": {
        "title": "File",
        "type": "object",
        "properties": {
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size",
            "description": "The size of the file in bytes.",
            "examples": [
              4404019
            ]
          },
          "file_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Name",
            "description": "The name of the file. It will be auto-generated if not provided.",
            "examples": [
              "z9RV14K95DvU.png"
            ]
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "The mime type of the file.",
            "examples": [
              "image/png"
            ]
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "The URL where the file can be downloaded from."
          }
        },
        "x-fal-order-properties": [
          "url",
          "content_type",
          "file_name",
          "file_size"
        ],
        "required": [
          "url"
        ]
      },
      "ColorPaletteMember": {
        "title": "ColorPaletteMember",
        "type": "object",
        "properties": {
          "color_weight": {
            "anyOf": [
              {
                "minimum": 0.05,
                "maximum": 1,
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color Weight",
            "description": "The weight of the color in the color palette",
            "default": 0.5
          },
          "rgb": {
            "description": "RGB color value for the palette member",
            "$ref": "#/components/schemas/RGBColor"
          }
        },
        "x-fal-order-properties": [
          "rgb",
          "color_weight"
        ],
        "required": [
          "rgb"
        ]
      },
      "RGBColor": {
        "title": "RGBColor",
        "type": "object",
        "properties": {
          "r": {
            "minimum": 0,
            "maximum": 255,
            "type": "integer",
            "title": "R",
            "description": "Red color value",
            "default": 0
          },
          "b": {
            "minimum": 0,
            "maximum": 255,
            "type": "integer",
            "title": "B",
            "description": "Blue color value",
            "default": 0
          },
          "g": {
            "minimum": 0,
            "maximum": 255,
            "type": "integer",
            "title": "G",
            "description": "Green color value",
            "default": 0
          }
        },
        "x-fal-order-properties": [
          "r",
          "g",
          "b"
        ]
      }
    }
  },
  "paths": {
    "/fal-ai/ideogram/v3/requests/{request_id}/status": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          },
          {
            "name": "logs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Whether to include logs (`1`) in the response or not (`0`)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/ideogram/v3/requests/{request_id}/cancel": {
      "put": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was cancelled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was cancelled successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/ideogram/v3": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeogramV3Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/ideogram/v3/requests/{request_id}": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeogramV3Output"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://queue.fal.run"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ]
}